const { GoogleGenerativeAI } = require("@google/generative-ai");
require("dotenv").config();

const apiKey = process.env.api_key;
const genAI = new GoogleGenerativeAI(apiKey);

const model = genAI.getGenerativeModel({
  model: "gemini-1.5-flash",
});

const generationConfig = {
  temperature: 1.05,
  topP: 0.95,
  topK: 64,
  maxOutputTokens: 8192,
  responseMimeType: "text/plain",
};

async function generateWebsite(
  title,
  description,
  colorScheme,
  layoutPreferences,
  features
) {
  const prompt =
    `User provides the following details:\n\n` +
    `Website name: ${title}\n\n` +
    `Description: ${description}\n\n` +
    `Color scheme: ${colorScheme}\n\n` +
    `Layout preferences: ${layoutPreferences}\n\n` +
    `Any specific features: ${features}\n\n` +
    `Create the following files for the website:\n\n` +
    `HTML file content (index.html)\n\n` +
    `CSS file content (styles.css)\n\n` +
    `JavaScript file content (scripts.js)\n\n` +
    `Make sure to generate only the code for each file with complete logic without any explanations.`;

  const chatSession = model.startChat({
    generationConfig,
    history: [
      {
        role: "user",
        parts: [
          {
            text: "i want to create an website on computer mouses, give me html, css and js files for them so that i can simply put them in a folder and run the website ",
          },
        ],
      },
      {
        role: "model",
        parts: [
          {
            text: 'Ok, I can help you create a basic website for computer mice. This example will have a simple layout with images, headings, and some basic information about mice. Let\'s get started:\n\n**1. HTML (index.html):**\n\n```html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Computer Mice</title>\n    <link rel="stylesheet" href="style.css">\n</head>\n<body>\n    <header>\n        <h1>Computer Mice: A Guide</h1>\n    </header>\n\n    <main>\n        <section class="mouse-types">\n            <h2>Types of Computer Mice</h2>\n            <div class="mouse-container">\n                <div class="mouse">\n                    <img src="images/mechanical-mouse.jpg" alt="Mechanical Mouse">\n                    <h3>Mechanical Mouse</h3>\n                    <p>These mice use a rolling ball to detect movement.</p>\n                </div>\n                <div class="mouse">\n                    <img src="images/optical-mouse.jpg" alt="Optical Mouse">\n                    <h3>Optical Mouse</h3>\n                    <p>Optical mice use a light sensor to track movement on a surface.</p>\n                </div>\n                <div class="mouse">\n                    <img src="images/laser-mouse.jpg" alt="Laser Mouse">\n                    <h3>Laser Mouse</h3>\n                    <p>Laser mice offer higher precision and work on more surfaces.</p>\n                </div>\n                <div class="mouse">\n                    <img src="images/wireless-mouse.jpg" alt="Wireless Mouse">\n                    <h3>Wireless Mouse</h3>\n                    <p>Wireless mice use Bluetooth or a USB receiver to connect.</p>\n                </div>\n            </div>\n        </section>\n\n        <section class="features">\n            <h2>Features to Consider</h2>\n            <ul>\n                <li>DPI (Dots Per Inch): Higher DPI means more sensitivity.</li>\n                <li>Buttons: Extra buttons for customization.</li>\n                <li>Ergonomics: Comfort and design for extended use.</li>\n                <li>Connectivity: Wired or wireless options.</li>\n            </ul>\n        </section>\n    </main>\n\n    <footer>\n        <p>Copyright &copy; 2023 Computer Mice Website</p>\n    </footer>\n</body>\n</html>\n```\n\n**2. CSS (style.css):**\n\n```css\nbody {\n    font-family: sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nheader {\n    background-color: #f0f0f0;\n    padding: 20px;\n    text-align: center;\n}\n\nmain {\n    padding: 20px;\n}\n\nsection {\n    margin-bottom: 30px;\n}\n\n.mouse-types {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n}\n\n.mouse {\n    width: 250px;\n    margin-bottom: 20px;\n    text-align: center;\n    border: 1px solid #ddd;\n    padding: 10px;\n}\n\n.mouse img {\n    max-width: 100%;\n    height: auto;\n}\n\n.features ul {\n    list-style: disc;\n    padding-left: 20px;\n}\n\nfooter {\n    text-align: center;\n    padding: 10px;\n    background-color: #eee;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n}\n```\n\n**3. JavaScript (script.js):**\n\n```javascript\n// Add JavaScript code here if needed (e.g., for interactions)\n\n// Example: Toggle a section with a button\nconst showMoreButton = document.getElementById(\'showMoreButton\');\nconst hiddenSection = document.getElementById(\'hiddenSection\');\n\nshowMoreButton.addEventListener(\'click\', () => {\n  hiddenSection.classList.toggle(\'show\');\n  if (hiddenSection.classList.contains(\'show\')) {\n    showMoreButton.textContent = \'Hide Section\';\n  } else {\n    showMoreButton.textContent = \'Show More\';\n  }\n});\n```\n\n**Explanation:**\n\n- **HTML:** Sets up the basic structure with sections for mouse types, features, and a footer. It includes placeholders for images you\'ll need to add.\n- **CSS:** Styles the layout, colors, and fonts. You can customize this to your liking.\n- **JavaScript:** This file is currently empty but can be used for adding interactive elements or features to your website.\n\n**Steps:**\n\n1. **Create Folders:** Create a folder for your website (e.g., "mouse-website"). Inside, create two subfolders: "images" and "css."\n2. **Download Images:** Find images for different types of mice and place them in the "images" folder. \n3. **Create Files:** Create the files "index.html," "style.css," and "script.js" (optional).\n4. **Copy Code:** Paste the HTML, CSS, and JavaScript code into their respective files.\n5. **Open in Browser:** Open "index.html" in your web browser. \n\n**Customize:**\n\n- **Images:** Use your own images or find free-to-use ones online.\n- **Content:** Add more detailed information about each mouse type, features, or any other relevant topics.\n- **CSS:** Experiment with styles to create a look you like.\n- **JavaScript:** Add any JavaScript code for interactive features like mouse rollovers, animations, or more complex functionality.\n\nRemember to save your files and refresh your browser after making changes.\n',
          },
        ],
      },
      {
        role: "user",
        parts: [
          { text: "give only the files no need for extra explanation\n" },
        ],
      },
      {
        role: "model",
        parts: [
          {
            text: 'Okay, here are the files without any extra explanations:\n\n**index.html:**\n\n```html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Computer Mice</title>\n    <link rel="stylesheet" href="style.css">\n</head>\n<body>\n    <header>\n        <h1>Computer Mice: A Guide</h1>\n    </header>\n\n    <main>\n        <section class="mouse-types">\n            <h2>Types of Computer Mice</h2>\n            <div class="mouse-container">\n                <div class="mouse">\n                    <img src="images/mechanical-mouse.jpg" alt="Mechanical Mouse">\n                    <h3>Mechanical Mouse</h3>\n                    <p>These mice use a rolling ball to detect movement.</p>\n                </div>\n                <div class="mouse">\n                    <img src="images/optical-mouse.jpg" alt="Optical Mouse">\n                    <h3>Optical Mouse</h3>\n                    <p>Optical mice use a light sensor to track movement on a surface.</p>\n                </div>\n                <div class="mouse">\n                    <img src="images/laser-mouse.jpg" alt="Laser Mouse">\n                    <h3>Laser Mouse</h3>\n                    <p>Laser mice offer higher precision and work on more surfaces.</p>\n                </div>\n                <div class="mouse">\n                    <img src="images/wireless-mouse.jpg" alt="Wireless Mouse">\n                    <h3>Wireless Mouse</h3>\n                    <p>Wireless mice use Bluetooth or a USB receiver to connect.</p>\n                </div>\n            </div>\n        </section>\n\n        <section class="features">\n            <h2>Features to Consider</h2>\n            <ul>\n                <li>DPI (Dots Per Inch): Higher DPI means more sensitivity.</li>\n                <li>Buttons: Extra buttons for customization.</li>\n                <li>Ergonomics: Comfort and design for extended use.</li>\n                <li>Connectivity: Wired or wireless options.</li>\n            </ul>\n        </section>\n    </main>\n\n    <footer>\n        <p>Copyright &copy; 2023 Computer Mice Website</p>\n    </footer>\n</body>\n</html>\n```\n\n**style.css:**\n\n```css\nbody {\n    font-family: sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nheader {\n    background-color: #f0f0f0;\n    padding: 20px;\n    text-align: center;\n}\n\nmain {\n    padding: 20px;\n}\n\nsection {\n    margin-bottom: 30px;\n}\n\n.mouse-types {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n}\n\n.mouse {\n    width: 250px;\n    margin-bottom: 20px;\n    text-align: center;\n    border: 1px solid #ddd;\n    padding: 10px;\n}\n\n.mouse img {\n    max-width: 100%;\n    height: auto;\n}\n\n.features ul {\n    list-style: disc;\n    padding-left: 20px;\n}\n\nfooter {\n    text-align: center;\n    padding: 10px;\n    background-color: #eee;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n}\n```\n\n**script.js:**\n\n```javascript\n// Add JavaScript code here if needed (e.g., for interactions)\n\n// Example: Toggle a section with a button\nconst showMoreButton = document.getElementById(\'showMoreButton\');\nconst hiddenSection = document.getElementById(\'hiddenSection\');\n\nshowMoreButton.addEventListener(\'click\', () => {\n  hiddenSection.classList.toggle(\'show\');\n  if (hiddenSection.classList.contains(\'show\')) {\n    showMoreButton.textContent = \'Hide Section\';\n  } else {\n    showMoreButton.textContent = \'Show More\';\n  }\n});\n```\n\n**Remember:**\n\n- You\'ll need to place images in a folder named "images" in the same directory as the HTML file.\n- Replace the placeholder image file names ("mechanical-mouse.jpg", "optical-mouse.jpg", etc.) with the actual file names of your images.\n',
          },
        ],
      },
      {
        role: "user",
        parts: [{ text: "no need for even the remember section\n" }],
      },
      {
        role: "model",
        parts: [
          {
            text: 'You got it! Here are the files, just the code:\n\n**index.html:**\n\n```html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Computer Mice</title>\n    <link rel="stylesheet" href="style.css">\n</head>\n<body>\n    <header>\n        <h1>Computer Mice: A Guide</h1>\n    </header>\n\n    <main>\n        <section class="mouse-types">\n            <h2>Types of Computer Mice</h2>\n            <div class="mouse-container">\n                <div class="mouse">\n                    <img src="images/mechanical-mouse.jpg" alt="Mechanical Mouse">\n                    <h3>Mechanical Mouse</h3>\n                    <p>These mice use a rolling ball to detect movement.</p>\n                </div>\n                <div class="mouse">\n                    <img src="images/optical-mouse.jpg" alt="Optical Mouse">\n                    <h3>Optical Mouse</h3>\n                    <p>Optical mice use a light sensor to track movement on a surface.</p>\n                </div>\n                <div class="mouse">\n                    <img src="images/laser-mouse.jpg" alt="Laser Mouse">\n                    <h3>Laser Mouse</h3>\n                    <p>Laser mice offer higher precision and work on more surfaces.</p>\n                </div>\n                <div class="mouse">\n                    <img src="images/wireless-mouse.jpg" alt="Wireless Mouse">\n                    <h3>Wireless Mouse</h3>\n                    <p>Wireless mice use Bluetooth or a USB receiver to connect.</p>\n                </div>\n            </div>\n        </section>\n\n        <section class="features">\n            <h2>Features to Consider</h2>\n            <ul>\n                <li>DPI (Dots Per Inch): Higher DPI means more sensitivity.</li>\n                <li>Buttons: Extra buttons for customization.</li>\n                <li>Ergonomics: Comfort and design for extended use.</li>\n                <li>Connectivity: Wired or wireless options.</li>\n            </ul>\n        </section>\n    </main>\n\n    <footer>\n        <p>Copyright &copy; 2023 Computer Mice Website</p>\n    </footer>\n</body>\n</html>\n```\n\n**style.css:**\n\n```css\nbody {\n    font-family: sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nheader {\n    background-color: #f0f0f0;\n    padding: 20px;\n    text-align: center;\n}\n\nmain {\n    padding: 20px;\n}\n\nsection {\n    margin-bottom: 30px;\n}\n\n.mouse-types {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n}\n\n.mouse {\n    width: 250px;\n    margin-bottom: 20px;\n    text-align: center;\n    border: 1px solid #ddd;\n    padding: 10px;\n}\n\n.mouse img {\n    max-width: 100%;\n    height: auto;\n}\n\n.features ul {\n    list-style: disc;\n    padding-left: 20px;\n}\n\nfooter {\n    text-align: center;\n    padding: 10px;\n    background-color: #eee;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n}\n```\n\n**script.js:**\n\n```javascript\n// Add JavaScript code here if needed (e.g., for interactions)\n\n// Example: Toggle a section with a button\nconst showMoreButton = document.getElementById(\'showMoreButton\');\nconst hiddenSection = document.getElementById(\'hiddenSection\');\n\nshowMoreButton.addEventListener(\'click\', () => {\n  hiddenSection.classList.toggle(\'show\');\n  if (hiddenSection.classList.contains(\'show\')) {\n    showMoreButton.textContent = \'Hide Section\';\n  } else {\n    showMoreButton.textContent = \'Show More\';\n  }\n});\n``` \n',
          },
        ],
      },
      {
        role: "user",
        parts: [
          {
            text: "User provides the following details:\n- Website name: mousex\n- Description: a comprehensive websites to buy and sell mouses, basically an eccomerce\n- Color scheme: light blue background with dark blue centres ,style the buttons accordingly\n- Layout preferences: Two column layout with a sidebar for recent transactions\n- Any specific features: search bar, cart section and add to cart functionalities\n\nCreate the following files for the website:\n\n1. HTML file content (index.html)\n2. CSS file content (styles.css)\n3. JavaScript file content (scripts.js)\n\nMake sure to generate only the code for each file without any explanations.\nCan add javascript files if you want.\n",
          },
        ],
      },
      {
        role: "model",
        parts: [
          {
            text: '## index.html\n\n```html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>MouseX</title>\n    <link rel="stylesheet" href="styles.css">\n</head>\n<body>\n    <header>\n        <h1>MouseX</h1>\n        <nav>\n            <ul>\n                <li><a href="#">Home</a></li>\n                <li><a href="#">Shop</a></li>\n                <li><a href="#">About</a></li>\n                <li><a href="#">Contact</a></li>\n            </ul>\n        </nav>\n        <div class="search-bar">\n            <input type="text" placeholder="Search for mice...">\n            <button>Search</button>\n        </div>\n    </header>\n\n    <main>\n        <section class="main-content">\n            <h2>Featured Mice</h2>\n            <div class="products">\n                </div>\n        </section>\n\n        <aside class="sidebar">\n            <h2>Recent Transactions</h2>\n            <ul class="transaction-list">\n                </ul>\n        </aside>\n    </main>\n\n    <footer>\n        <p>&copy; 2023 MouseX</p>\n    </footer>\n\n    <script src="scripts.js"></script>\n</body>\n</html>\n```\n\n## styles.css\n\n```css\nbody {\n    font-family: sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: lightblue;\n}\n\nheader {\n    background-color: darkblue;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\nnav ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: inline-block;\n}\n\nnav li {\n    display: inline-block;\n    margin: 0 15px;\n}\n\nnav a {\n    text-decoration: none;\n    color: white;\n}\n\n.search-bar {\n    display: flex;\n    margin: 20px auto;\n    width: 400px;\n    justify-content: center;\n}\n\n.search-bar input {\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px 0 0 5px;\n    width: 300px;\n}\n\n.search-bar button {\n    padding: 10px 15px;\n    background-color: darkblue;\n    color: white;\n    border: none;\n    border-radius: 0 5px 5px 0;\n    cursor: pointer;\n}\n\nmain {\n    padding: 20px;\n    display: flex;\n    gap: 20px;\n}\n\n.main-content {\n    width: 70%;\n}\n\n.sidebar {\n    width: 30%;\n    background-color: white;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.products {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n.product {\n    width: 200px;\n    margin-bottom: 20px;\n    background-color: white;\n    border-radius: 10px;\n    padding: 10px;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.product img {\n    max-width: 100%;\n    height: auto;\n    border-radius: 10px 10px 0 0;\n}\n\n.product h3 {\n    margin-top: 10px;\n}\n\n.product p {\n    margin-top: 5px;\n}\n\n.product button {\n    padding: 8px 15px;\n    background-color: darkblue;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 10px;\n}\n\nfooter {\n    text-align: center;\n    padding: 10px;\n    background-color: darkblue;\n    color: white;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n}\n```\n\n## scripts.js\n\n```javascript\n// Sample data for products (Replace with your actual data)\nconst products = [\n    {\n        "id": 1,\n        "name": "Gaming Mouse",\n        "price": 50,\n        "image": "images/gaming-mouse.jpg"\n    },\n    {\n        "id": 2,\n        "name": "Wireless Mouse",\n        "price": 35,\n        "image": "images/wireless-mouse.jpg"\n    },\n    {\n        "id": 3,\n        "name": "Ergonomic Mouse",\n        "price": 40,\n        "image": "images/ergonomic-mouse.jpg"\n    }\n];\n\n// Function to display products on the page\nfunction displayProducts() {\n    const productsContainer = document.querySelector(\'.products\');\n    productsContainer.innerHTML = \'\'; // Clear existing products\n\n    products.forEach(product => {\n        const productElement = document.createElement(\'div\');\n        productElement.classList.add(\'product\');\n\n        const productHTML = `\n            <img src="${product.image}" alt="${product.name}">\n            <h3>${product.name}</h3>\n            <p>$${product.price}</p>\n            <button data-id="${product.id}">Add to Cart</button>\n        `;\n        productElement.innerHTML = productHTML;\n        productsContainer.appendChild(productElement);\n    });\n\n    // Add click event listeners to "Add to Cart" buttons\n    const addToCartButtons = document.querySelectorAll(\'.products button\');\n    addToCartButtons.forEach(button => {\n        button.addEventListener(\'click\', () => {\n            const productId = button.dataset.id;\n            addToCart(productId); // Call addToCart function (not implemented)\n            // Add logic to update cart section or display a message\n        });\n    });\n}\n\n// Function to handle adding to cart (not fully implemented)\nfunction addToCart(productId) {\n    // Implement logic to add the product to the cart (e.g., using local storage)\n    console.log("Product with ID:", productId, "added to cart.");\n    // You would likely:\n    // 1. Find the product in the products array based on productId\n    // 2. Update the cart (e.g., in local storage)\n    // 3. Update the cart section on the page (e.g., by calling a function to display cart items)\n}\n\n// Function to display recent transactions (not fully implemented)\nfunction displayTransactions() {\n    const transactionList = document.querySelector(\'.transaction-list\');\n    transactionList.innerHTML = \'\'; // Clear existing transactions\n\n    // Implement logic to fetch and display recent transactions (e.g., from local storage or server)\n    // For example:\n    // let transactions = getTransactionsFromLocalStorage(); // Assuming you have a function to get transactions\n    // transactions.forEach(transaction => {\n    //     const transactionItem = document.createElement(\'li\');\n    //     // Create and append transaction item based on transaction data\n    //     transactionList.appendChild(transactionItem);\n    // });\n}\n\n// Call functions on page load\ndisplayProducts();\ndisplayTransactions();\n```\n\n**Remember:**\n\n- This is a basic starting point. You will need to implement the functionality of the search bar, cart, "add to cart" buttons, and recent transactions.\n- You will need to replace the placeholder image names with the actual file names of your product images.\n- You will also need to create the "images" folder in the same directory as your HTML file to store the images.\n- You can use JavaScript\'s `localStorage` to store the cart and recent transactions, or you can use a server-side language to store these data persistently.\n',
          },
        ],
      },
      {
        role: "user",
        parts: [
          {
            text: "User provides the following details:\n\nWebsite name: mousex\n\nDescription: a comprehensive websites to buy and sell mouses, basically an eccomerce\n\nColor scheme: light blue background with dark blue centres ,style the buttons accordingly\n\nLayout preferences: Two column layout with a sidebar for recent transactions\n\nAny specific features: search bar, cart section and add to cart functionalities\n\nCreate the following files for the website:\n\nHTML file content (index.html)\n\nCSS file content (styles.css)\n\nJavaScript file content (scripts.js)\n\nMake sure to generate only the code for each file with complete logic without any explanations.",
          },
        ],
      },
      {
        role: "model",
        parts: [
          {
            text: '## index.html\n\n```html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>MouseX</title>\n    <link rel="stylesheet" href="styles.css">\n</head>\n<body>\n    <header>\n        <h1>MouseX</h1>\n        <nav>\n            <ul>\n                <li><a href="#">Home</a></li>\n                <li><a href="#">Shop</a></li>\n                <li><a href="#">About</a></li>\n                <li><a href="#">Contact</a></li>\n            </ul>\n        </nav>\n        <div class="search-bar">\n            <input type="text" id="searchInput" placeholder="Search for mice...">\n            <button id="searchButton">Search</button>\n        </div>\n    </header>\n\n    <main>\n        <section class="main-content">\n            <h2>Featured Mice</h2>\n            <div class="products" id="productsContainer">\n                </div>\n        </section>\n\n        <aside class="sidebar">\n            <h2>Recent Transactions</h2>\n            <ul class="transaction-list" id="transactionList">\n                </ul>\n        </aside>\n    </main>\n\n    <footer>\n        <p>&copy; 2023 MouseX</p>\n    </footer>\n\n    <div id="cartModal" class="modal">\n        <div class="modal-content">\n            <span class="close" id="closeModal">&times;</span>\n            <h2>Your Cart</h2>\n            <ul id="cartItems">\n                </ul>\n            <button id="checkoutButton">Checkout</button>\n        </div>\n    </div>\n\n    <script src="scripts.js"></script>\n</body>\n</html>\n```\n\n## styles.css\n\n```css\nbody {\n    font-family: sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: lightblue;\n}\n\nheader {\n    background-color: darkblue;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\nnav ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: inline-block;\n}\n\nnav li {\n    display: inline-block;\n    margin: 0 15px;\n}\n\nnav a {\n    text-decoration: none;\n    color: white;\n}\n\n.search-bar {\n    display: flex;\n    margin: 20px auto;\n    width: 400px;\n    justify-content: center;\n}\n\n.search-bar input {\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px 0 0 5px;\n    width: 300px;\n}\n\n.search-bar button {\n    padding: 10px 15px;\n    background-color: darkblue;\n    color: white;\n    border: none;\n    border-radius: 0 5px 5px 0;\n    cursor: pointer;\n}\n\nmain {\n    padding: 20px;\n    display: flex;\n    gap: 20px;\n}\n\n.main-content {\n    width: 70%;\n}\n\n.sidebar {\n    width: 30%;\n    background-color: white;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.products {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n.product {\n    width: 200px;\n    margin-bottom: 20px;\n    background-color: white;\n    border-radius: 10px;\n    padding: 10px;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.product img {\n    max-width: 100%;\n    height: auto;\n    border-radius: 10px 10px 0 0;\n}\n\n.product h3 {\n    margin-top: 10px;\n}\n\n.product p {\n    margin-top: 5px;\n}\n\n.product button {\n    padding: 8px 15px;\n    background-color: darkblue;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 10px;\n}\n\nfooter {\n    text-align: center;\n    padding: 10px;\n    background-color: darkblue;\n    color: white;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n}\n\n/* Modal styles */\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0,0,0,0.4);\n}\n\n.modal-content {\n    background-color: #fefefe;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 500px;\n    border-radius: 10px;\n}\n\n.close {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n#checkoutButton {\n    padding: 10px 20px;\n    background-color: darkblue;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 20px;\n}\n\n#cartItems {\n    list-style: none;\n    padding: 0;\n}\n\n#cartItems li {\n    margin-bottom: 10px;\n}\n```\n\n## scripts.js\n\n```javascript\n// Sample data for products (Replace with your actual data)\nconst products = [\n    {\n        "id": 1,\n        "name": "Gaming Mouse",\n        "price": 50,\n        "image": "images/gaming-mouse.jpg"\n    },\n    {\n        "id": 2,\n        "name": "Wireless Mouse",\n        "price": 35,\n        "image": "images/wireless-mouse.jpg"\n    },\n    {\n        "id": 3,\n        "name": "Ergonomic Mouse",\n        "price": 40,\n        "image": "images/ergonomic-mouse.jpg"\n    }\n];\n\n// Get DOM elements\nconst productsContainer = document.getElementById(\'productsContainer\');\nconst transactionList = document.getElementById(\'transactionList\');\nconst searchInput = document.getElementById(\'searchInput\');\nconst searchButton = document.getElementById(\'searchButton\');\nconst cartModal = document.getElementById(\'cartModal\');\nconst closeModalButton = document.getElementById(\'closeModal\');\nconst cartItemsList = document.getElementById(\'cartItems\');\nconst checkoutButton = document.getElementById(\'checkoutButton\');\n\n// Cart and transactions (using local storage for now)\nlet cart = JSON.parse(localStorage.getItem(\'cart\')) || {};\nlet transactions = JSON.parse(localStorage.getItem(\'transactions\')) || [];\n\n// Function to display products on the page\nfunction displayProducts(productsToDisplay = products) {\n    productsContainer.innerHTML = \'\'; // Clear existing products\n\n    productsToDisplay.forEach(product => {\n        const productElement = document.createElement(\'div\');\n        productElement.classList.add(\'product\');\n\n        const productHTML = `\n            <img src="${product.image}" alt="${product.name}">\n            <h3>${product.name}</h3>\n            <p>$${product.price}</p>\n            <button data-id="${product.id}">Add to Cart</button>\n        `;\n        productElement.innerHTML = productHTML;\n        productsContainer.appendChild(productElement);\n    });\n\n    // Add click event listeners to "Add to Cart" buttons\n    const addToCartButtons = document.querySelectorAll(\'.products button\');\n    addToCartButtons.forEach(button => {\n        button.addEventListener(\'click\', () => {\n            const productId = button.dataset.id;\n            addToCart(productId);\n        });\n    });\n}\n\n// Function to handle adding to cart\nfunction addToCart(productId) {\n    if (cart[productId]) {\n        cart[productId]++;\n    } else {\n        cart[productId] = 1;\n    }\n    localStorage.setItem(\'cart\', JSON.stringify(cart));\n    updateCartDisplay();\n}\n\n// Function to update the cart display\nfunction updateCartDisplay() {\n    cartItemsList.innerHTML = \'\';\n\n    if (Object.keys(cart).length === 0) {\n        const emptyCartMessage = document.createElement(\'li\');\n        emptyCartMessage.textContent = \'Your cart is empty.\';\n        cartItemsList.appendChild(emptyCartMessage);\n    } else {\n        let cartTotal = 0;\n        for (const productId in cart) {\n            const product = products.find(p => p.id == productId);\n            if (product) {\n                const cartItem = document.createElement(\'li\');\n                cartItem.innerHTML = `\n                    ${product.name} x ${cart[productId]} - $${(product.price * cart[productId]).toFixed(2)}\n                `;\n                cartItemsList.appendChild(cartItem);\n                cartTotal += product.price * cart[productId];\n            }\n        }\n\n        // Display cart total (you might want to style this differently)\n        const cartTotalElement = document.createElement(\'li\');\n        cartTotalElement.innerHTML = `<strong>Total:</strong> $${cartTotal.toFixed(2)}`;\n        cartItemsList.appendChild(cartTotalElement);\n    }\n}\n\n// Function to display recent transactions\nfunction displayTransactions() {\n    transactionList.innerHTML = \'\';\n\n    transactions.forEach(transaction => {\n        const transactionItem = document.createElement(\'li\');\n        transactionItem.textContent = transaction;\n        transactionList.appendChild(transactionItem);\n    });\n}\n\n// Function to handle search\nfunction handleSearch() {\n    const searchTerm = searchInput.value.toLowerCase();\n    const filteredProducts = products.filter(product =>\n        product.name.toLowerCase().includes(searchTerm)\n    );\n    displayProducts(filteredProducts);\n}\n\n// Function to open the cart modal\nfunction openCartModal() {\n    cartModal.style.display = \'block\';\n    updateCartDisplay();\n}\n\n// Function to close the cart modal\nfunction closeCartModal() {\n    cartModal.style.display = \'none\';\n}\n\n// Function to handle checkout (not fully implemented)\nfunction handleCheckout() {\n    if (Object.keys(cart).length > 0) {\n        // Implement logic for checkout (e.g., process order, send confirmation email, etc.)\n        // ...\n        // After successful checkout, you can clear the cart\n        cart = {};\n        localStorage.setItem(\'cart\', JSON.stringify(cart));\n        updateCartDisplay();\n\n        // You can also add the transaction to the transactions array\n        const transaction = \'Order placed\'; // Add details about the order here\n        transactions.push(transaction);\n        localStorage.setItem(\'transactions\', JSON.stringify(transactions));\n        displayTransactions();\n    } else {\n        alert(\'Your cart is empty.\');\n    }\n}\n\n// Event listeners\nsearchButton.addEventListener(\'click\', handleSearch);\ncloseModalButton.addEventListener(\'click\', closeCartModal);\ncheckoutButton.addEventListener(\'click\', handleCheckout);\n\n// Initial display of products and transactions\ndisplayProducts();\ndisplayTransactions();\n```\n\n**Important:**\n\n- This code provides the basic structure and functionality for an e-commerce website.\n- You will need to replace the placeholder image names in `products` array with the actual file names of your product images.\n- You will also need to create the "images" folder in the same directory as your HTML file to store the images.\n- The code uses `localStorage` to store the cart and recent transactions.\n- The checkout logic is not fully implemented. You will need to add your own implementation for handling orders, payment processing, and other aspects of the checkout process.\n\nThis code includes a functional cart, search functionality, and a basic modal for displaying the cart. You can build upon this foundation to create a more complex and robust e-commerce website.\n',
          },
        ],
      },
      {
        role: "user",
        parts: [
          {
            text: "User provides the following details:\n\nWebsite name: ansh porfolio\n\nDescription: my personal portfolio which looks extremely professional\n\nColor scheme: light blue background with dark blue centres ,style the buttons accordingly\n\nLayout preferences: 4 row layout with media queries\n\nAny specific features: search bar and a chatbot for navigation\n\nCreate the following files for the website:\n\nHTML file content (index.html)\n\nCSS file content (styles.css)\n\nJavaScript file content (scripts.js)\n\nMake sure to generate only the code for each file with the full logic without any explanations.",
          },
        ],
      },
      {
        role: "model",
        parts: [
          {
            text: '## index.html\n\n```html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Ansh Portfolio</title>\n    <link rel="stylesheet" href="styles.css">\n</head>\n<body>\n    <header>\n        <h1>Ansh Portfolio</h1>\n        <div class="search-bar">\n            <input type="text" id="searchInput" placeholder="Search...">\n            <button id="searchButton">Search</button>\n        </div>\n    </header>\n\n    <main>\n        <section class="row">\n            <div class="column">\n                <h2>About Me</h2>\n                <p>This is where you\'ll add your introduction, skills, and experience.</p>\n            </div>\n            <div class="column">\n                <h2>Projects</h2>\n                <div class="project-container">\n                    </div>\n            </div>\n        </section>\n\n        <section class="row">\n            <div class="column">\n                <h2>Skills</h2>\n                <ul>\n                    <li>HTML</li>\n                    <li>CSS</li>\n                    <li>JavaScript</li>\n                    <li>Python</li>\n                    </li>\n                </ul>\n            </div>\n            <div class="column">\n                <h2>Contact</h2>\n                <p>Email: ansh@email.com</p>\n                <p>Phone: +123-456-7890</p>\n                <p>LinkedIn: linkedin.com/in/ansh</p>\n            </div>\n        </section>\n\n        <section class="row">\n            <div class="column">\n                <h2>Blog</h2>\n                <div class="blog-posts">\n                    </div>\n            </div>\n            <div class="column">\n                <h2>Testimonials</h2>\n                <div class="testimonials">\n                    </div>\n            </div>\n        </section>\n    </main>\n\n    <footer>\n        <p>&copy; 2023 Ansh Portfolio</p>\n    </footer>\n\n    <script src="scripts.js"></script>\n</body>\n</html>\n```\n\n## styles.css\n\n```css\nbody {\n    font-family: \'Arial\', sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: lightblue;\n    color: #333;\n}\n\nheader {\n    background-color: darkblue;\n    color: white;\n    padding: 20px;\n    text-align: center;\n}\n\n.search-bar {\n    display: flex;\n    margin: 20px auto;\n    width: 400px;\n    justify-content: center;\n}\n\n.search-bar input {\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px 0 0 5px;\n    width: 300px;\n}\n\n.search-bar button {\n    padding: 10px 15px;\n    background-color: darkblue;\n    color: white;\n    border: none;\n    border-radius: 0 5px 5px 0;\n    cursor: pointer;\n}\n\nmain {\n    padding: 20px;\n}\n\n.row {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-bottom: 30px;\n}\n\n.column {\n    width: 48%;\n    background-color: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n    color: darkblue;\n}\n\n.project-container, .blog-posts, .testimonials {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n.project, .blog-post, .testimonial {\n    width: 48%;\n    margin-bottom: 20px;\n    background-color: white;\n    padding: 15px;\n    border-radius: 10px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nfooter {\n    text-align: center;\n    padding: 10px;\n    background-color: darkblue;\n    color: white;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n}\n\n/* Media Queries for Responsive Layout */\n@media (max-width: 768px) {\n    .column {\n        width: 100%;\n        margin-bottom: 20px;\n    }\n}\n```\n\n## scripts.js\n\n```javascript\n// Sample data for projects, blog posts, and testimonials (replace with your own data)\nconst projects = [\n    {\n        "title": "Project 1",\n        "description": "A brief description of Project 1.",\n        "link": "https://example.com/project1"\n    },\n    {\n        "title": "Project 2",\n        "description": "A brief description of Project 2.",\n        "link": "https://example.com/project2"\n    }\n];\n\nconst blogPosts = [\n    {\n        "title": "Blog Post 1",\n        "excerpt": "A short excerpt of Blog Post 1.",\n        "link": "https://example.com/blogpost1"\n    },\n    {\n        "title": "Blog Post 2",\n        "excerpt": "A short excerpt of Blog Post 2.",\n        "link": "https://example.com/blogpost2"\n    }\n];\n\nconst testimonials = [\n    {\n        "author": "John Doe",\n        "content": "This is a testimonial from John Doe about Ansh\'s work."\n    },\n    {\n        "author": "Jane Smith",\n        "content": "This is a testimonial from Jane Smith about Ansh\'s work."\n    }\n];\n\n// Get DOM elements\nconst projectsContainer = document.querySelector(\'.project-container\');\nconst blogPostsContainer = document.querySelector(\'.blog-posts\');\nconst testimonialsContainer = document.querySelector(\'.testimonials\');\nconst searchInput = document.getElementById(\'searchInput\');\nconst searchButton = document.getElementById(\'searchButton\');\n\n// Function to display projects\nfunction displayProjects() {\n    projectsContainer.innerHTML = \'\';\n\n    projects.forEach(project => {\n        const projectElement = document.createElement(\'div\');\n        projectElement.classList.add(\'project\');\n        projectElement.innerHTML = `\n            <h3>${project.title}</h3>\n            <p>${project.description}</p>\n            <a href="${project.link}" target="_blank">View Project</a>\n        `;\n        projectsContainer.appendChild(projectElement);\n    });\n}\n\n// Function to display blog posts\nfunction displayBlogPosts() {\n    blogPostsContainer.innerHTML = \'\';\n\n    blogPosts.forEach(post => {\n        const postElement = document.createElement(\'div\');\n        postElement.classList.add(\'blog-post\');\n        postElement.innerHTML = `\n            <h3>${post.title}</h3>\n            <p>${post.excerpt}</p>\n            <a href="${post.link}" target="_blank">Read More</a>\n        `;\n        blogPostsContainer.appendChild(postElement);\n    });\n}\n\n// Function to display testimonials\nfunction displayTestimonials() {\n    testimonialsContainer.innerHTML = \'\';\n\n    testimonials.forEach(testimonial => {\n        const testimonialElement = document.createElement(\'div\');\n        testimonialElement.classList.add(\'testimonial\');\n        testimonialElement.innerHTML = `\n            <p>"${testimonial.content}"</p>\n            <p>- ${testimonial.author}</p>\n        `;\n        testimonialsContainer.appendChild(testimonialElement);\n    });\n}\n\n// Function to handle search (not fully implemented)\nfunction handleSearch() {\n    const searchTerm = searchInput.value.toLowerCase();\n\n    // Implement search logic here (e.g., filter projects, blog posts, or testimonials)\n    // ...\n\n    // You can call displayProjects, displayBlogPosts, or displayTestimonials again to display filtered data\n    // displayProjects();\n    // displayBlogPosts();\n    // displayTestimonials();\n}\n\n// Initial display of projects, blog posts, and testimonials\ndisplayProjects();\ndisplayBlogPosts();\ndisplayTestimonials();\n\n// Event listeners\nsearchButton.addEventListener(\'click\', handleSearch);\n```\n\n**Important:**\n\n- This code provides a basic structure and layout for a professional-looking portfolio website.\n- You will need to replace the placeholder data in `projects`, `blogPosts`, and `testimonials` arrays with your own information.\n- The search functionality is not fully implemented. You will need to add your own logic for filtering the content based on the search term.\n- The chatbot functionality is not included in this code. You will need to integrate a chatbot service (e.g., Dialogflow, Chatfuel) into your website.\n\nThis code provides a solid foundation for building your portfolio website. You can customize it further to match your specific needs and design preferences.\n',
          },
        ],
      },
      {
        role: "user",
        parts: [
          {
            text: "User provides the following details:\n\nWebsite name: my kittens\n\nDescription: a store for selling and buying kittens\n\nColor scheme: dark pink colored bg with light pink buttons\n\nLayout preferences: 3 column layout with a search bar and add to cart\n\nAny specific features: search bar and a cart\n\nCreate the following files for the website:\n\nHTML file content (index.html)\n\nCSS file content (styles.css)\n\nJavaScript file content (scripts.js)\n\nMake sure to generate only the code for each file with the full logic without any explanations.",
          },
        ],
      },
      {
        role: "model",
        parts: [
          {
            text: '## index.html\n\n```html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>My Kittens</title>\n    <link rel="stylesheet" href="styles.css">\n</head>\n<body>\n    <header>\n        <h1>My Kittens</h1>\n        <div class="search-bar">\n            <input type="text" id="searchInput" placeholder="Search for kittens...">\n            <button id="searchButton">Search</button>\n        </div>\n    </header>\n\n    <main>\n        <section class="products" id="productsContainer">\n            </section>\n\n        <aside class="cart">\n            <h2>Your Cart</h2>\n            <ul id="cartItems">\n                </ul>\n            <button id="checkoutButton">Checkout</button>\n        </aside>\n    </main>\n\n    <footer>\n        <p>&copy; 2023 My Kittens</p>\n    </footer>\n\n    <script src="scripts.js"></script>\n</body>\n</html>\n```\n\n## styles.css\n\n```css\nbody {\n    font-family: \'Arial\', sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #D87093; /* Dark Pink */\n    color: #fff; /* White text */\n}\n\nheader {\n    background-color: #D87093; /* Dark Pink */\n    color: #fff; /* White text */\n    padding: 20px;\n    text-align: center;\n}\n\n.search-bar {\n    display: flex;\n    margin: 20px auto;\n    width: 400px;\n    justify-content: center;\n}\n\n.search-bar input {\n    padding: 10px;\n    border: 1px solid #fff; /* White border */\n    border-radius: 5px 0 0 5px;\n    width: 300px;\n    color: #fff; /* White text */\n    background-color: #D87093; /* Dark Pink */\n}\n\n.search-bar button {\n    padding: 10px 15px;\n    background-color: #FFC0CB; /* Light Pink */\n    color: #fff; /* White text */\n    border: none;\n    border-radius: 0 5px 5px 0;\n    cursor: pointer;\n}\n\nmain {\n    padding: 20px;\n    display: flex;\n    gap: 20px;\n}\n\n.products {\n    width: 70%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n.product {\n    width: 300px;\n    margin-bottom: 20px;\n    background-color: #fff; /* White */\n    border-radius: 10px;\n    padding: 10px;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.product img {\n    max-width: 100%;\n    height: auto;\n    border-radius: 10px 10px 0 0;\n}\n\n.product h3 {\n    margin-top: 10px;\n}\n\n.product p {\n    margin-top: 5px;\n}\n\n.product button {\n    padding: 8px 15px;\n    background-color: #FFC0CB; /* Light Pink */\n    color: #fff; /* White text */\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 10px;\n}\n\n.cart {\n    width: 30%;\n    background-color: #fff; /* White */\n    padding: 20px;\n    border-radius: 10px;\n    color: #333; /* Dark Text */\n}\n\nh2 {\n    color: #D87093; /* Dark Pink */\n}\n\nfooter {\n    text-align: center;\n    padding: 10px;\n    background-color: #D87093; /* Dark Pink */\n    color: #fff; /* White text */\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n}\n\n#checkoutButton {\n    padding: 10px 20px;\n    background-color: #FFC0CB; /* Light Pink */\n    color: #fff; /* White text */\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 20px;\n}\n\n#cartItems {\n    list-style: none;\n    padding: 0;\n}\n\n#cartItems li {\n    margin-bottom: 10px;\n}\n```\n\n## scripts.js\n\n```javascript\n// Sample data for kittens (Replace with your actual data)\nconst kittens = [\n    {\n        "id": 1,\n        "name": "Fluffy",\n        "breed": "Persian",\n        "price": 500,\n        "image": "images/fluffy.jpg"\n    },\n    {\n        "id": 2,\n        "name": "Whiskers",\n        "breed": "Siamese",\n        "price": 450,\n        "image": "images/whiskers.jpg"\n    },\n    {\n        "id": 3,\n        "name": "Mittens",\n        "breed": "Ragdoll",\n        "price": 600,\n        "image": "images/mittens.jpg"\n    }\n];\n\n// Get DOM elements\nconst productsContainer = document.getElementById(\'productsContainer\');\nconst searchInput = document.getElementById(\'searchInput\');\nconst searchButton = document.getElementById(\'searchButton\');\nconst cartItemsList = document.getElementById(\'cartItems\');\nconst checkoutButton = document.getElementById(\'checkoutButton\');\n\n// Cart (using local storage for now)\nlet cart = JSON.parse(localStorage.getItem(\'cart\')) || {};\n\n// Function to display kittens on the page\nfunction displayKittens(kittensToDisplay = kittens) {\n    productsContainer.innerHTML = \'\'; // Clear existing kittens\n\n    kittensToDisplay.forEach(kitten => {\n        const kittenElement = document.createElement(\'div\');\n        kittenElement.classList.add(\'product\');\n\n        const kittenHTML = `\n            <img src="${kitten.image}" alt="${kitten.name}">\n            <h3>${kitten.name}</h3>\n            <p>Breed: ${kitten.breed}</p>\n            <p>Price: $${kitten.price}</p>\n            <button data-id="${kitten.id}">Add to Cart</button>\n        `;\n        kittenElement.innerHTML = kittenHTML;\n        productsContainer.appendChild(kittenElement);\n    });\n\n    // Add click event listeners to "Add to Cart" buttons\n    const addToCartButtons = document.querySelectorAll(\'.products button\');\n    addToCartButtons.forEach(button => {\n        button.addEventListener(\'click\', () => {\n            const kittenId = button.dataset.id;\n            addToCart(kittenId);\n        });\n    });\n}\n\n// Function to handle adding to cart\nfunction addToCart(kittenId) {\n    if (cart[kittenId]) {\n        cart[kittenId]++;\n    } else {\n        cart[kittenId] = 1;\n    }\n    localStorage.setItem(\'cart\', JSON.stringify(cart));\n    updateCartDisplay();\n}\n\n// Function to update the cart display\nfunction updateCartDisplay() {\n    cartItemsList.innerHTML = \'\';\n\n    if (Object.keys(cart).length === 0) {\n        const emptyCartMessage = document.createElement(\'li\');\n        emptyCartMessage.textContent = \'Your cart is empty.\';\n        cartItemsList.appendChild(emptyCartMessage);\n    } else {\n        let cartTotal = 0;\n        for (const kittenId in cart) {\n            const kitten = kittens.find(k => k.id == kittenId);\n            if (kitten) {\n                const cartItem = document.createElement(\'li\');\n                cartItem.innerHTML = `\n                    ${kitten.name} x ${cart[kittenId]} - $${(kitten.price * cart[kittenId]).toFixed(2)}\n                `;\n                cartItemsList.appendChild(cartItem);\n                cartTotal += kitten.price * cart[kittenId];\n            }\n        }\n\n        // Display cart total (you might want to style this differently)\n        const cartTotalElement = document.createElement(\'li\');\n        cartTotalElement.innerHTML = `<strong>Total:</strong> $${cartTotal.toFixed(2)}`;\n        cartItemsList.appendChild(cartTotalElement);\n    }\n}\n\n// Function to handle search\nfunction handleSearch() {\n    const searchTerm = searchInput.value.toLowerCase();\n    const filteredKittens = kittens.filter(kitten =>\n        kitten.name.toLowerCase().includes(searchTerm) ||\n        kitten.breed.toLowerCase().includes(searchTerm)\n    );\n    displayKittens(filteredKittens);\n}\n\n// Function to handle checkout (not fully implemented)\nfunction handleCheckout() {\n    if (Object.keys(cart).length > 0) {\n        // Implement logic for checkout (e.g., process order, send confirmation email, etc.)\n        // ...\n        // After successful checkout, you can clear the cart\n        cart = {};\n        localStorage.setItem(\'cart\', JSON.stringify(cart));\n        updateCartDisplay();\n    } else {\n        alert(\'Your cart is empty.\');\n    }\n}\n\n// Event listeners\nsearchButton.addEventListener(\'click\', handleSearch);\ncheckoutButton.addEventListener(\'click\', handleCheckout);\n\n// Initial display of kittens\ndisplayKittens();\n```\n\n**Important:**\n\n- This code provides the basic structure and functionality for a kitten store website.\n- You will need to replace the placeholder image names in `kittens` array with the actual file names of your kitten images.\n- You will also need to create the "images" folder in the same directory as your HTML file to store the images.\n- The code uses `localStorage` to store the cart.\n- The checkout logic is not fully implemented. You will need to add your own implementation for handling orders, payment processing, and other aspects of the checkout process.\n\nThis code includes a functional cart, search functionality, and basic styling. You can build upon this foundation to create a more complex and robust kitten store website.\n\n',
          },
        ],
      },
    ],
  });

  const result = await chatSession.sendMessage(prompt);
  const files = JSON.parse(result.response.text());
  return files;
}

module.exports = { generateWebsite };
